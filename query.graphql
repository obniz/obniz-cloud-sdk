query webapp($first: first, $skip: skip) {
  webapp {
    id
    title
    short_body
    type
    store_status
    installs(first: $first, skip: $skip) {
      totalCount
      pageInfo {
        ...pageInfoFields
      }
      edges {
        ...installEdgeFields
      }
    }
  }
}

query app($first: first, $skip: skip) {
  app {
    id
    title
    short_body
    type
    store_status
    installs(first: $first, skip: $skip) {
      totalCount
      pageInfo {
        ...pageInfoFields
      }
      edges {
        ...appInstallEdgeFields
      }
    }
  }
}

query user {
  user {
    id
    name
    email
    picture
    plan
    credit
    createdAt
  }
}

query devices(
  $first: first
  $skip: skip
  $id: String
  $hw: String
  $app: Int
  $status: String
  $created: String
  $serialCode: String
  $sort: String
  $order: String
) {
  devices(
    first: $first
    skip: $skip
    id: $id
    hw: $hw
    app: $app
    status: $status
    created: $created
    serialCode: $serialCode
    sort: $sort
    order: $order
  ) {
    totalCount
    pageInfo {
      ...pageInfoFields
    }
    edges {
      ...deviceEdgeFields
    }
  }
}

query device(
  $serialUrl: String
) {
  device(
    serialUrl: $serialUrl
  ) {
   id
  }
}

query events($first: first, $skip: skip) {
  events(first: $first, skip: $skip) {
    totalCount
    pageInfo {
      ...pageInfoFields
    }
    edges {
      ...eventEdgeFields
    }
  }
}

query hardwares {
  hardwares {
    hardware
    os
  }
}

query os($hardware: String!) {
  os(hardware: $hardware) {
    version
    app_url
    bootloader_url
    partition_url
  }
}

query appEvents($first: first, $skip: skip) {
  appEvents(first: $first, skip: $skip) {
    totalCount
    pageInfo {
      ...pageInfoFields
    }
    events {
      id
      createdAt
      type
      app {
        id
      }
      payload {
        user {
          id
          name
          email
          picture
          plan
          credit
          createdAt
        }
        device {
          id
          access_token
          description
          metadata
          devicekey
          hardware
          os
          osVersion
          region
          status
          createdAt
          user {
            id
            name
            email
            picture
            plan
            credit
            createdAt
          }
          configs
        }
      }
    }
  }
}

query operations($id: Int, $facilityName: String) {
  operations(id: $id, facilityName: $facilityName) {
    edges {
      node {
        id
        name
        facilityId
        completionLevel
        needPicEvidence
        needLocationNote
        dueDate
        operationKey
        createdAt
      }
      facilityName
      amountExpectedDevices
      amountOperatedDevices
      amountReport
      errorLevelReport
    }
  }
}

query operationSettings($first: first, $operationId: ID, $status: Int) {
  operationSettings(first: $first, operationId: $operationId, status: $status) {
    totalCount
    edges {
      node {
        id
        operationId
        indicationId
        networkConfigs
        appId
        appConfigs
        description
        status
      }
      operationResult {
        obnizId
        successfullyWrittenAt
        becomeOnlineAt
        picUrl
        locationNote
        typeError
      }
    }
  }
}

query operationResults(
  $first: first
  $operationId: ID
  $operationSettingId: ID
) {
  operationResults(
    first: $first
    operationId: $operationId
    operationSettingId: $operationSettingId
  ) {
    totalCount
    edges {
      node {
        id
        operationSettingId
        indicationId
        obnizId
        successfullyWrittenAt
        becomeOnlineAt
        picUrl
        locationNote
        typeError
      }
    }
  }
}

query token {
  token {
    type
    user
    device
    event
    facility
    device_control
  }
}

mutation createEvent($event: eventCreateInput!) {
  createEvent(event: $event) {
    id
    name
    trigger
    action
    webhookUri
    createdAt
  }
}

mutation updateEvent($event: eventUpdateInput!) {
  updateEvent(event: $event) {
    id
    name
    trigger
    action
    webhookUri
    createdAt
  }
}

mutation deleteEvent($id: ID!) {
  deleteEvent(id: $id)
}

mutation createDevice($device: deviceCreateInput!) {
  createDevice(device: $device) {
    id
    access_token
    description
    metadata
    devicekey
    hardware
    os
    osVersion
    region
    status
    createdAt
    user {
      id
      name
      email
      picture
      plan
      credit
      createdAt
    }
    configs
  }
}

mutation registrateDevice($device: deviceRegistrateInput!) {
  registrateDevice(device: $device) {
    id
    access_token
    description
    metadata
    devicekey
    hardware
    os
    osVersion
    region
    status
    createdAt
    user {
      id
      name
      email
      picture
      plan
      credit
      createdAt
    }
    configs
  }
}

mutation updateDevice($device: deviceUpdateInput!) {
  updateDevice(device: $device) {
    id
    access_token
    description
    metadata
    devicekey
    hardware
    os
    osVersion
    region
    status
    createdAt
    user {
      id
      name
      email
      picture
      plan
      credit
      createdAt
    }
    configs
  }
}

mutation installApp($install: appInstallInput!) {
  installApp(install: $install) {
    id
    access_token
    description
    metadata
    devicekey
    hardware
    os
    osVersion
    region
    status
    createdAt
    user {
      id
      name
      email
      picture
      plan
      credit
      createdAt
    }
    configs
  }
}

mutation updateDeviceSettingsForInstalledApp(
  $updateDeviceSettingsForInstalledApp: deviceInstalledAppSettingsInput!
) {
  updateDeviceSettingsForInstalledApp(
    edit: $updateDeviceSettingsForInstalledApp
  ) {
    id
    access_token
    description
    metadata
    devicekey
    hardware
    os
    osVersion
    region
    status
    createdAt
    user {
      id
      name
      email
      picture
      plan
      credit
      createdAt
    }
    configs
  }
}

mutation uninstallApp($uninstallApp: appUninstallInput!) {
  uninstallApp(uninstall: $uninstallApp) {
    id
    access_token
    description
    metadata
    devicekey
    hardware
    os
    osVersion
    region
    status
    createdAt
    user {
      id
      name
      email
      picture
      plan
      credit
      createdAt
    }
    configs
  }
}

mutation generateDeviceAccessToken(
  $generateDeviceAccessToken: DeviceGenerateAccessTokenInput!
) {
  generateDeviceAccessToken(device: $generateDeviceAccessToken) {
    id
    access_token
    description
    metadata
    devicekey
    hardware
    os
    osVersion
    region
    status
    createdAt
    user {
      id
      name
      email
      picture
      plan
      credit
      createdAt
    }
    configs
  }
}

mutation deleteDeviceAccessToken(
  $deleteDeviceAccessToken: DeviceDeleteAccessTokenInput!
) {
  deleteDeviceAccessToken(device: $deleteDeviceAccessToken) {
    id
    access_token
    description
    metadata
    devicekey
    hardware
    os
    osVersion
    region
    status
    createdAt
    user {
      id
      name
      email
      picture
      plan
      credit
      createdAt
    }
    configs
  }
}

mutation updateStatusOperationSetting($operationSettingId: ID!) {
  updateStatusOperationSetting(operationSettingId: $operationSettingId) {
    updated
  }
}

mutation createOperationResult($operationResult: createOperationResultInput!) {
  createOperationResult(operationResult: $operationResult) {
    id
    operationSettingId
    indicationId
    obnizId
    successfullyWrittenAt
    becomeOnlineAt
    picUrl
    locationNote
    typeError
  }
}

mutation removeOperationResult($operationSettingId: ID!) {
  removeOperationResult(operationSettingId: $operationSettingId) {
    removed
  }
}

fragment pageInfoFields on pageInfo {
  hasPreviousPage
  hasNextPage
}

fragment installEdgeFields on installEdge {
  node {
    id
    configs
    createdAt
    updatedAt
    user {
      id
      name
      email
      picture
      plan
      createdAt
      credit
    }
  }
}

fragment appInstallEdgeFields on appInstallEdge {
  node {
    id
    access_token
    description
    metadata
    devicekey
    hardware
    os
    osVersion
    region
    status
    createdAt
    user {
      id
      name
      email
      picture
      plan
      createdAt
      credit
    }
    configs
  }
}

fragment deviceEdgeFields on deviceEdge {
  node {
    id,
    access_token,
    description,
    devicekey,
    hardware,
    os,
    osVersion,
    region,
    status,
    createdAt,
    pingInterval,
    deviceLiveInfo {
      ...deviceLiveInfoFields,
    },
  }
}

fragment deviceLiveInfoFields on deviceLiveInfo {
  isOnline,
  onlineAt,
  offlineAt,
  connectedNetwork {
    ...connectedNetworkFields,
  },
}

fragment connectedNetworkFields on connectedNetwork {
  online_at,
  net,
  local_ip,
  global_ip,
  wifi {
    ...wifiFields,
  },
  wifimesh {
    ...wifimeshFields,
  },
  cellular {
     ...cellularFields,
  }
}

fragment wifiFields on wifi {
  ssid,
  macAddress,
  rssi,
}

fragment wifimeshFields on wifimesh {
  meshid,
  parent_obniz_id,
  root_obniz_id,
  layer,
  rssi,
}

fragment cellularFields on cellular {
  cnum,
  iccid,
  imei,
  imsi,
  rssi,
}

fragment eventEdgeFields on eventEdge {
  node {
    id
    name
    trigger
    action
    webhookUri
    createdAt
  }
}
